<?xml version="1.0" encoding="utf-8"?>
<components:MainViewItem xmlns:fx="http://ns.adobe.com/mxml/2009"
						 xmlns:s="library://ns.adobe.com/flex/spark"
						 xmlns:mx="library://ns.adobe.com/flex/mx"
						 width="100%"
						 height="100%"
						 xmlns:components="be.irail.betrains.playbook.view.components.*"
						 xmlns:recent="be.irail.betrains.playbook.view.recent.*">
	<fx:Declarations>
		<recent:RecentSchedulerQueriesPresentationModel id="presentationModel"/>
	</fx:Declarations>

	<components:states>
		<s:State name="none"/>
		<s:State name="recents"/>
	</components:states>

	<fx:Script>
		<![CDATA[
			import be.irail.betrains.playbook.controller.ModelLocator;
			import be.irail.betrains.playbook.data.RecentQueriesCollection;
			import be.irail.betrains.playbook.data.SchedulerQuery;
			import be.irail.betrains.playbook.view.recent.itemrenderer.RecentQueryItem;

			import mx.events.FlexEvent;

			import qnx.locale.LocaleManager;

			import spark.events.IndexChangeEvent;

			// ----------------------------
			// recents
			// ----------------------------

			private var _recents:RecentQueriesCollection;

			public function get recents():RecentQueriesCollection {
				return presentationModel.recents;
			}

			public function set recents(value:RecentQueriesCollection):void {
				if (!value || value.length == 0) {
					this.currentState = "none";
				} else {
					this.currentState = "recents";
				}
				presentationModel.recents = value;
			}

			override public function refresh():void {
				this.recents = ModelLocator.getInstance().recentSchedulerQueries;
				if (this.currentState == "recents") {
					callLater(selectSelectedItem);
				}
			}

			private function selectSelectedItem():void {
				recentsList.selectedItem = presentationModel.selectedQuery;
			}

			protected function recentsList_changeHandler(event:IndexChangeEvent):void {
				presentationModel.selectedQuery = recentsList.selectedItem as SchedulerQuery;
			}
		]]>
	</fx:Script>
	<s:Group left="0"
			 right="0"
			 top="0"
			 bottom="50">

		<s:Label textAlign="center"
				 fontSize="40"
				 color="#1F1F1F"
				 alpha=".3"
				 horizontalCenter="0"
				 verticalCenter="0"
				 fontWeight="bold"
				 includeIn="none"
				 text="{LocaleManager.localeManager.getResource('recent.none')}"/>

		<s:HGroup id="contentCont"
				  height="500"
				  width="800"
				  horizontalCenter="0"
				  verticalCenter="0"
				  horizontalAlign="center"
				  verticalAlign="middle"
				  includeIn="recents">


			<s:List id="recentsList"
					width="400"
					maxHeight="{contentCont.height}"
					change="recentsList_changeHandler(event)"
					dataProvider="{presentationModel.recents}"
					borderVisible="false"
					contentBackgroundAlpha="0"
					allowMultipleSelection="false"
					skinClass="be.irail.betrains.playbook.view.recent.RecentListSkin"
					itemRenderer="be.irail.betrains.playbook.view.recent.itemrenderer.RecentQueryItem">
				<s:layout>
					<s:VerticalLayout useVirtualLayout="true"
									  clipAndEnableScrolling="false"
									  gap="0"
									  variableRowHeight="false"/>
				</s:layout>
				<s:scroller>
					<s:Scroller visible="false"/>
				</s:scroller>
			</s:List>

			<components:ConnectionsList visible="{presentationModel.selectedQuery!=null}"
										includeInLayout="{presentationModel.selectedQuery!=null}"
										dataProvider="{presentationModel.schedulerItems}"
										maxHeight="{contentCont.height}"
										width="100%"/>

		</s:HGroup>

	</s:Group>
</components:MainViewItem>
