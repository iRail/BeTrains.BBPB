<?xml version="1.0" encoding="utf-8"?>
<components:MainViewItem xmlns:fx="http://ns.adobe.com/mxml/2009"
						 xmlns:s="library://ns.adobe.com/flex/spark"
						 xmlns:mx="library://ns.adobe.com/flex/mx"
						 width="100%"
						 height="100%"
						 xmlns:components="be.irail.betrains.playbook.view.components.*"
						 xmlns:recent="be.irail.betrains.playbook.view.recent.*">
	<fx:Declarations>
		<recent:RecentSchedulerQueriesPresentationModel id="presentationModel"/>
	</fx:Declarations>

	<components:states>
		<s:State name="none"/>
		<s:State name="recents"/>
		<s:State name="recentItemSelected"/>
	</components:states>

	<fx:Script>
		<![CDATA[
			import be.irail.betrains.playbook.controller.ModelLocator;
			import be.irail.betrains.playbook.data.RecentQueriesCollection;
			import be.irail.betrains.playbook.data.SchedulerQuery;
			import be.irail.betrains.playbook.view.components.skins.BetrainListSkin;
			import be.irail.betrains.playbook.view.recent.itemrenderer.RecentQueryItem;

			import qnx.locale.LocaleManager;

			import spark.events.IndexChangeEvent;

			// ----------------------------
			// recents
			// ----------------------------

			private var _recents:RecentQueriesCollection;

			public function get recents():RecentQueriesCollection {
				return presentationModel.recents;
			}

			public function set recents(value:RecentQueriesCollection):void {
				if (!value || value.length == 0) {
					this.currentState = "none";
				} else {
					this.currentState = "recents";
				}
				presentationModel.recents = value;
			}

			override public function make():void {
				this.recents = ModelLocator.getInstance().recentSchedulerQueries;
			}

			override public function destroy():void {
				if (recentsList)
					recentsList.selectedIndex = -1;
			}

			private function selectSelectedItem():void {
				recentsList.selectedItem = presentationModel.selectedQuery;
			}

			protected function recentsList_changeHandler(event:IndexChangeEvent):void {
				presentationModel.selectedQuery = recentsList.selectedItem as SchedulerQuery;

				if (presentationModel.selectedQuery)
					this.currentState = "recentItemSelected";
				else
					this.currentState = "recents";
			}
		]]>
	</fx:Script>
	<s:Label styleName="noneLabel"
			 alpha=".3"
			 width="100%"
			 height="100%"
			 includeIn="none"
			 text="{LocaleManager.localeManager.getResource('recent.none')}"/>

	<s:Group left="0"
			 right="0"
			 top="0"
			 bottom="50"
			 includeIn="recents,recentItemSelected">

		<s:List id="recentsList"
				width="410"
				height="100%"
				change="recentsList_changeHandler(event)"
				dataProvider="{presentationModel.recents}"
				allowMultipleSelection="false"
				skinClass="be.irail.betrains.playbook.view.components.skins.BetrainListSkin"
				itemRenderer="be.irail.betrains.playbook.view.recent.itemrenderer.RecentQueryItem">
			<s:layout>
				<s:VerticalLayout useVirtualLayout="true"
								  clipAndEnableScrolling="false"
								  gap="0"
								  verticalAlign="middle"
								  variableRowHeight="false"/>
			</s:layout>
		</s:List>

		<components:ConnectionsList includeIn="recentItemSelected"
									dataProvider="{presentationModel.schedulerItems}"
									x="410"
									width="614"
									height="100%"/>


		<s:Label styleName="noneLabel"
				 alpha=".3"
				 x="410"
				 width="614"
				 height="100%"
				 includeIn="recents"
				 text="{LocaleManager.localeManager.getResource('recent.noneSelected')}"/>

		<s:Rect left="0"
				bottom="0"
				top="0"
				width="410">
			<s:fill>
				<s:BitmapFill source="@Embed(source='images/bg.png')"
							  fillMode="scale"
							  smooth="true"/>
			</s:fill>
			<s:filters>
				<s:DropShadowFilter blurX="6"
									blurY="6"
									strength=".4"
									quality="3"
									angle="45"
									distance="3"/>
			</s:filters>
		</s:Rect>


	</s:Group>

</components:MainViewItem>
