<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:components="be.irail.betrains.playbook.view.components.*"
			   xmlns:ns="http://ns.renaun.com/mxml/2010"
			   xmlns:text="qnx.ui.text.*"
			   xmlns:controls="be.irail.betrains.playbook.view.components.controls.*"
			   xmlns:stations="be.irail.api.data.stations.*"
			   width="800"
			   height="550"
			   visible="false"
			   skinClass="be.irail.betrains.playbook.view.components.skins.StationPopupSkin"
			   creationComplete="titlewindow1_creationCompleteHandler(event)"
			   contentCreationComplete="titlewindow1_contentCreationCompleteHandler(event)">
	<fx:Declarations>
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import be.irail.api.data.stations.IRStation;
			import be.irail.betrains.playbook.controller.ModelLocator;

			import com.adobe.utils.StringUtil;

			import flash.utils.setTimeout;

			import mx.collections.ArrayCollection;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;

			import qnx.locale.LocaleManager;
			import qnx.ui.skins.text.TextInputSkinWhite;
			import qnx.ui.text.TextInput;
			import qnx.ui.text.TextInputIconMode;

			public static const OK:uint = 0x0004;

			public static const CANCEL:uint = 0x0008;

			private var _model:ModelLocator = ModelLocator.getInstance();

			// ----------------------------
			// stations (read-only)
			// ----------------------------

			private var _stationList:ArrayCollection;

			private var _nameFilter:String;

			// ----------------------------
			// selectedStation
			// ----------------------------

			private var _selectedStation:IRStation;

			public function get selectedStation():IRStation {
				return _selectedStation;
			}

			public function set selectedStation(value:IRStation):void {
				if (value != _selectedStation) {
					_selectedStation = value;
				}
			}

			public function close(detail:uint = 0x0008):void {
				stage.focus = null;
				stationList.dataProvider = null;
				PopUpManager.removePopUp(this);
				dispatchEvent(new CloseEvent(CloseEvent.CLOSE, false, false, detail));
			}

			protected function stationName_changeHandler(e:Event):void {
				var txtInput:TextInput = e.currentTarget as TextInput;
				_nameFilter = StringUtil.trim(txtInput.text);
				refreshList();
			}


			protected function titlewindow1_creationCompleteHandler(event:FlexEvent):void {
				_stationList = new ArrayCollection(_model.stations.toArray());
				_stationList.filterFunction = filterList;

				refreshList();

				setTimeout(showMe, 100);
			}

			private function showMe():void {
				this.visible = true;
			}

			private function filterList(obj:Object):Boolean {
				if (!_nameFilter || _nameFilter.length == 0) {
					return true;
				}

				var name:String = String(obj.name).toLowerCase().substr(0, _nameFilter.length),
					test:RegExp = new RegExp(_nameFilter, "ig"),
					result:Boolean = name.match(test).length > 0;

				return result;
			}

			private function refreshList():void {
				_stationList.refresh();
				stationList.dataProvider = _stationList;
			}

			private function stationList_changeHandler(event:Event):void {
				selectedStation = (stationList.selectedItem as IRStation);
				close(OK);
			}

			protected function titlewindow1_contentCreationCompleteHandler(event:FlexEvent):void {
				txtInput.setSkin(TextInputSkinWhite);

				var tF:TextFormat = txtInput.format;
				tF.leftMargin = 10;

				txtInput.format = tF;
			}


			private function closeButtonClose():void {
				selectedStation = null;
				close(CANCEL);
			}
		]]>
	</fx:Script>
	<s:Rect left="0"
			bottom="0"
			top="0"
			right="0"
			radiusX="4"
			radiusY="4">
		<s:fill>
			<s:BitmapFill source="@Embed(source='images/bg.png')"
						  fillMode="scale"
						  smooth="true"/>
		</s:fill>
	</s:Rect>

	<ns:QContainer width="760"
				   height="50"
				   y="9"
				   x="20"
				   padding="0">
		<text:TextInput id="txtInput"
						width="760"
						height="50"
						prompt="{LocaleManager.localeManager.getResource('station.search.prompt')}"
						change="stationName_changeHandler(event)"
						clearIconMode="{TextInputIconMode.ALWAYS}"/>
	</ns:QContainer>

	<components:StationsList id="stationList"
							 horizontalCenter="0"
							 y="70"
							 width="760"
							 height="470"
							 change="stationList_changeHandler(event)"/>

	<controls:CloseButton right="-45"
						  top="24"
						  click="closeButtonClose()"/>

</s:TitleWindow>
