<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   width="400"
			   height="300"
			   skinClass="be.irail.betrains.playbook.view.components.skins.StationPopupSkin"
			   xmlns:stations="be.irail.api.data.stations.*"
			   creationComplete="titlewindow1_creationCompleteHandler(event)">
	<s:layout>
		<s:VerticalLayout/>
	</s:layout>
	<fx:Declarations>
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import be.irail.api.data.stations.IRStation;
			import be.irail.betrains.playbook.controller.ModelLocator;

			import mx.collections.ArrayCollection;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;

			import org.as3commons.lang.StringUtils;

			import spark.events.IndexChangeEvent;
			import spark.events.TextOperationEvent;

			public static const OK:uint = 0x0004;

			public static const CANCEL:uint = 0x0008;

			private var _model:ModelLocator = ModelLocator.getInstance();

			// ----------------------------
			// stations (read-only)
			// ----------------------------

			private var _stationList:ArrayCollection;

			private var _nameFilter:String;

			[Bindable(event="stationListChange")]
			public function get stations():ArrayCollection {
				return _stationList;
			}

			// ----------------------------
			// selectedStation
			// ----------------------------

			private var _selectedStation:IRStation;

			public function get selectedStation():IRStation {
				return _selectedStation;
			}

			public function set selectedStation(value:IRStation):void {
				if (value != _selectedStation) {
					_selectedStation = value;
				}
			}

			public function close(detail:uint = 0x0008):void {
				stage.focus = null;
				PopUpManager.removePopUp(this);
				dispatchEvent(new CloseEvent(CloseEvent.CLOSE, false, false, detail));
			}

			protected function stationList_changeHandler(event:IndexChangeEvent):void {
				selectedStation = stationList.selectedItem;
				close(OK);
			}


			protected function stationName_changeHandler(event:TextOperationEvent):void {
				_nameFilter = StringUtils.trim(stationName.text);
				refreshList();
			}


			protected function titlewindow1_creationCompleteHandler(event:FlexEvent):void {
				_stationList = new ArrayCollection(_model.stations.toArray());
				_stationList.filterFunction = filterList;
				refreshList();
				stationName.setFocus();
			}

			private function filterList(obj:Object):Boolean {
				if (!_nameFilter || _nameFilter.length == 0) {
					return true;
				}

				var name:String = String(obj.name).toLowerCase().substr(0, _nameFilter.length),
					test:RegExp = new RegExp(_nameFilter, "ig"),
					result:Array = name.match(test);

				return (result && result.length > 0);
			}

			private function refreshList():void {
				_stationList.refresh();
				dispatchEvent(new Event("stationListChange"));
			}
		]]>
	</fx:Script>
	<s:TextInput id="stationName"
				 width="100%"
				 change="stationName_changeHandler(event)"/>
	<s:List skinClass="be.irail.betrains.playbook.view.components.skins.BetrainListSkin"
			id="stationList"
			useVirtualLayout="true"
			width="100%"
			height="100%"
			labelFunction="IRStation.labelFunction"
			dataProvider="{stations}"
			change="stationList_changeHandler(event)"/>
</s:TitleWindow>
