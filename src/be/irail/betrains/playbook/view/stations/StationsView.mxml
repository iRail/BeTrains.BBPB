<?xml version="1.0" encoding="utf-8"?>
<components:MainViewItem xmlns:fx="http://ns.adobe.com/mxml/2009"
						 xmlns:s="library://ns.adobe.com/flex/spark"
						 xmlns:mx="library://ns.adobe.com/flex/mx"
						 xmlns:components="be.irail.betrains.playbook.view.components.*"
						 width="100%"
						 height="100%"
						 xmlns:views="qnx.views.*"
						 xmlns:stations="be.irail.betrains.playbook.view.stations.*"
						 xmlns:controls="be.irail.betrains.playbook.view.components.controls.*">
	<fx:Declarations>

	</fx:Declarations>
	<components:states>
		<s:State name="inputName"/>
		<s:State name="loadingName"/>
		<s:State name="liveboard"/>
	</components:states>

	<fx:Script>
		<![CDATA[
			import be.irail.api.data.liveboard.Liveboard;
			import be.irail.api.event.IRailResultEvent;
			import be.irail.api.methodgroup.Liveboards;

			private var service:Liveboards = new Liveboards();

			private function inputNameView_stationNameChangeHandler(event:Event):void {
				service.addEventListener(IRailResultEvent.LIVEBOARD_RESULT, onLiveboardResult);
				service.getStationLiveboardByStationName(inputNameView.stationName);
				this.currentState = "loadingName";
			}

			private function onLiveboardResult(event:IRailResultEvent):void {
				service.removeEventListener(IRailResultEvent.LIVEBOARD_RESULT, onLiveboardResult);
				this.currentState = "liveboard";
				stationLiveboard.liveBoard = (event.result.data as Liveboard);
			}

			protected function stationLiveboard_returnToInputHandler(event:Event):void {
				this.currentState = "inputName";
			}

			override public function refresh():void {
				if (this.currentState == "inputName") {
					if (inputNameView) {
						inputNameView.refresh();
					}
				}
			}
		]]>
	</fx:Script>

	<stations:StationsInputName id="inputNameView"
								includeIn="inputName"
								stationNameChange="inputNameView_stationNameChangeHandler(event)"/>
	<controls:Spinner includeIn="loadingName"
					  verticalCenter="0"
					  horizontalCenter="0"/>
	<stations:StationsLiveboardInfo id="stationLiveboard"
									returnToInput="stationLiveboard_returnToInputHandler(event)"
									includeIn="liveboard"/>
</components:MainViewItem>
