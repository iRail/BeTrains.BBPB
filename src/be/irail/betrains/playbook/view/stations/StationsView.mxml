<?xml version="1.0" encoding="utf-8"?>
<components:MainViewItem xmlns:fx="http://ns.adobe.com/mxml/2009"
						 xmlns:s="library://ns.adobe.com/flex/spark"
						 xmlns:mx="library://ns.adobe.com/flex/mx"
						 xmlns:components="be.irail.betrains.playbook.view.components.*"
						 xmlns:views="qnx.views.*"
						 xmlns:stations="be.irail.betrains.playbook.view.stations.*"
						 xmlns:controls="be.irail.betrains.playbook.view.components.controls.*"
						 xmlns:ns="http://ns.renaun.com/mxml/2010"
						 xmlns:text="qnx.ui.text.*">
	<fx:Declarations>
		<stations:StationsViewPresentationModel id="presentationModel"/>
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import be.irail.api.data.stations.IRStation;
			import be.irail.betrains.playbook.view.stations.itemrenderer.StationListItem;

			import mx.events.FlexEvent;

			import org.as3commons.lang.StringUtils;

			import qnx.locale.LocaleManager;
			import qnx.ui.text.ReturnKeyType;
			import qnx.ui.text.TextInput;
			import qnx.ui.text.TextInputIconMode;

			import spark.events.IndexChangeEvent;

			protected function mainvixewitem1_creationCompleteHandler(event:FlexEvent):void {
				presentationModel.init();
			}

			private function onSearchInputChange(event:KeyboardEvent):void {
				if (event.keyCode == Keyboard.ENTER) {
					search();
				}
			}

			private function stationsList_changeHandler(event:IndexChangeEvent):void {
				presentationModel.selectedStation = stationsList.selectedItem as IRStation;

			}

			override public function make():void {
				presentationModel.refreshList();
			}

			override public function destroy():void {
				searchInput.text = "";
				stationsList.selectedIndex = -1;
				search();
			}


			private function search():void {
				if (!stationsList.selectedItem) {
					presentationModel.selectedStation = null;
				}

				presentationModel.updateFilter(StringUtils.trim(searchInput.text));
				presentationModel.refreshList();
			}

			protected function searchInput_changeHandler(event:Event):void {
				search();
			}
		]]>
	</fx:Script>
	<s:Rect left="0"
			right="0"
			top="0"
			bottom="0"
			alpha=".6"
			visible="{presentationModel.hasStation}">
		<s:fill>
			<s:SolidColor color="#FFFFFF"/>
		</s:fill>
	</s:Rect>

	<s:Rect left="0"
			bottom="0"
			top="0"
			width="410">
		<s:fill>
			<s:BitmapFill source="@Embed(source='images/bg.png')"
						  fillMode="scale"
						  smooth="true"/>
		</s:fill>
		<s:filters>
			<s:DropShadowFilter blurX="6"
								blurY="6"
								strength=".4"
								quality="3"
								angle="45"
								distance="3"/>
		</s:filters>
	</s:Rect>

	<s:HGroup width="100%"
			  height="100%"
			  gap="40"
			  paddingTop="2"
			  paddingLeft="20"
			  paddingRight="20"
			  paddingBottom="2">

		<s:Group id="stationListGrp"
				 width="370"
				 height="100%">
			<ns:QContainer id="searchInputContainer"
						   x="-3"
						   padding="0">
				<text:TextInput id="searchInput"
								width="{stationListGrp.width}"
								height="40"
								prompt="{LocaleManager.localeManager.getResource('station.search.prompt')}"
								returnKeyType="{ReturnKeyType.SEARCH}"
								keyDown="onSearchInputChange(event)"
								change="searchInput_changeHandler(event)"
								clearIconMode="{TextInputIconMode.ALWAYS}"/>
			</ns:QContainer>

			<components:BeTrainsList id="stationsList"
									 y="45"
									 width="100%"
									 height="100%"
									 dataProvider="{presentationModel.stations}"
									 change="stationsList_changeHandler(event)"
									 itemRenderer="be.irail.betrains.playbook.view.stations.itemrenderer.StationListItem">

			</components:BeTrainsList>
		</s:Group>

		<stations:StationProfile id="stationProfile"
								 station="{presentationModel.selectedStation}"
								 width="100%"
								 height="100%"/>
	</s:HGroup>
</components:MainViewItem>
