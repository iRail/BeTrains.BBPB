<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:stations="be.irail.api.data.stations.*"
		 xmlns:components="be.irail.betrains.playbook.view.components.*"
		 xmlns:stations1="be.irail.betrains.playbook.view.stations.*"
		 width="100%"
		 height="100%"
		 xmlns:ns="http://ns.renaun.com/mxml/2010"
		 xmlns:yahoo="http://www.yahoo.com/2008/mxml"
		 creationComplete="group1_creationCompleteHandler(event)">
	<s:states>
		<s:State name="none"/>
		<s:State name="details"/>
	</s:states>
	<fx:Script>
		<![CDATA[
			import be.irail.api.data.liveboard.Liveboard;
			import be.irail.api.data.stations.IRStation;
			import be.irail.api.event.IRailErrorEvent;
			import be.irail.api.event.IRailResultEvent;
			import be.irail.api.methodgroup.Liveboards;

			import com.yahoo.maps.api.YahooMap;
			import com.yahoo.maps.api.YahooMapEvent;
			import com.yahoo.maps.api.core.location.LatLon;
			import com.yahoo.maps.api.markers.SimpleMarker;

			import mx.core.FlexGlobals;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;

			import qnx.locale.LocaleManager;

			private var _mapReady:Boolean;

			private var service:Liveboards = new Liveboards();

			private var mapComponent:YahooMap;

			// ----------------------------
			// station
			// ----------------------------

			private var _station:IRStation;

			[Bindable(event="stationChange")]
			public function get station():IRStation {
				return _station;
			}

			[Bindable(event="stationChange")]
			public function get stationName():String {
				if (!station) {
					return "";
				}
				return station.formattedName;
			}

			[Bindable(event="stationChange")]
			public function get stationLng():Number {
				if (!station) {
					return 0;
				}
				return station.longitude;
			}

			[Bindable(event="stationChange")]
			public function get stationLat():Number {
				if (!station) {
					return 0;
				}
				return station.latitude;
			}

			public function set station(value:IRStation):void {
				_station = value;
				if (value) {
					this.currentState = "details";
				} else {
					this.currentState = "none";
				}

				addMarker();

				dispatchEvent(new Event("stationChange"));
			}

			private function addMarker():void {
				if (mapComponent && _mapReady) {
					mapComponent.centerLatLon = new LatLon(stationLat, stationLng);
					mapComponent.zoomLevel = 3;
				}
			}

			protected function liveBoard_clickHandler(event:MouseEvent):void {
				service.addEventListener(IRailResultEvent.LIVEBOARD_RESULT, onLiveboardResult);
				service.addEventListener(IRailErrorEvent.API_ERROR, onError);
				service.addEventListener(IRailErrorEvent.IO_ERROR, onError);
				service.getStationLiveboardByStationName(stationName);
				liveBoardBtn.isBusy = true;
			}

			private function onError(event:IRailErrorEvent):void {
				liveBoardBtn.isBusy = false;
			}

			private function onLiveboardResult(event:IRailResultEvent):void {
				service.removeEventListener(IRailResultEvent.LIVEBOARD_RESULT, onLiveboardResult);
				liveBoardBtn.isBusy = false;

				var stationsLiveboard:StationsLiveboardInfo = new StationsLiveboardInfo();
				stationsLiveboard.liveBoard = (event.result.data as Liveboard);
				PopUpManager.addPopUp(stationsLiveboard, FlexGlobals.topLevelApplication as DisplayObject, false);
			}

			protected function group1_creationCompleteHandler(event:FlexEvent):void {
				mapComponent = new YahooMap();
				mapComponent.init("Hc6WPw_V34Fs6FRv3XHq8vDAcXKBhZuS0gzHba0Sq8PKwD3n4NZQtS1pv7vuwsPa3I6unns4", mapComponentContainer.width, mapComponentContainer.height);

				mapComponent.addEventListener(YahooMapEvent.MAP_INITIALIZE, onMapInitialize);
				mapComponentContainer.addChild(mapComponent);
			}

			private function onMapInitialize(event:YahooMapEvent):void {
				mapComponent.removeEventListener(YahooMapEvent.MAP_INITIALIZE, onMapInitialize);
				mapComponent.addPanControl();
				mapComponent.addZoomWidget();
				_mapReady = true;

				addMarker();
			}
		]]>
	</fx:Script>

	<s:Label textAlign="center"
			 left="10"
			 top="10"
			 fontSize="40"
			 horizontalCenter="0"
			 verticalCenter="0"
			 verticalAlign="middle"
			 color="#1F1F1F"
			 alpha=".3"
			 fontWeight="bold"
			 includeIn="none"
			 text="{LocaleManager.localeManager.getResource('station.profile.none')}"/>

	<s:Group includeIn="details"
			 top="10"
			 width="100%"
			 height="100%">
		<s:Label textAlign="left"
				 paddingLeft="10"
				 width="{this.width}"
				 fontSize="60"
				 color="#1F1F1F"
				 alpha=".6"
				 fontWeight="bold"
				 maxDisplayedLines="1"
				 text="{stationName}"/>
		<s:Label textAlign="left"
				 paddingLeft="10"
				 width="{this.width}"
				 y="45"
				 fontSize="30"
				 color="#1F1F1F"
				 alpha=".4"
				 fontWeight="bold"
				 text="{LocaleManager.localeManager.getResource('station.profile.type.station')}"/>

		<stations1:StationDataButton id="liveBoardBtn"
									 y="150"
									 width="600"
									 horizontalCenter="0"
									 label="{LocaleManager.localeManager.getResource('station.profile.liveboardbtn')}"
									 click="liveBoard_clickHandler(event)"/>
	</s:Group>

	<mx:UIComponent id="mapComponentContainer"
					width="600"
					height="200"
					horizontalCenter="0"
					y="280"
					visible="{this.currentState=='details'}"/>
</s:Group>
