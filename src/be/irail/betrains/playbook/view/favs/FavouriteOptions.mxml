<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:components="be.irail.betrains.playbook.view.components.*"
		 xmlns:ns="http://ns.renaun.com/mxml/2010"
		 xmlns:favs="be.irail.betrains.playbook.view.favs.*">
	<fx:Script>
		<![CDATA[
			import be.irail.api.data.stations.IRStation;
			import be.irail.betrains.playbook.controller.ModelLocator;
			import be.irail.betrains.playbook.data.FavouriteConnection;

			import flash.utils.setTimeout;

			include "../resource_wrapper.as";

			private var _model:ModelLocator = ModelLocator.getInstance();

			// ----------------------------
			// favourite
			// ----------------------------

			private var _favourite:FavouriteConnection;

			[Bindable(event="favouriteChange")]
			public function get favourite():FavouriteConnection {
				return _favourite;
			}

			[Bindable(event="favouriteChange")]
			public function get favouriteFrom():IRStation {
				if (!_favourite)
					return null;

				return _model.stations.getStationById(_favourite.fromStationId);
			}

			[Bindable(event="favouriteChange")]
			public function get favouriteFromLabel():String {
				if (!_favourite)
					return "";
				return favouriteFrom.formattedName;
			}

			[Bindable(event="favouriteChange")]
			public function get favouriteTo():IRStation {
				if (!_favourite)
					return null;

				return _model.stations.getStationById(_favourite.toStationId);
			}

			[Bindable(event="favouriteChange")]
			public function get favouriteToLabel():String {
				if (!_favourite)
					return "";

				return favouriteTo.formattedName;
			}

			public function set favourite(value:FavouriteConnection):void {
				if (value != _favourite) {
					_favourite = value;
					dispatchEvent(new Event("favouriteChange"));
				}
			}

			private function selectStation(station:IRStation):void {
				dispatchEvent(new FavouriteEvent(FavouriteEvent.SEE_STATION, station));
			}
		]]>
	</fx:Script>
	<s:Group top="10"
			 width="100%"
			 height="100%">

		<s:VGroup gap="2"
				  left="10"
				  right="10">

			<s:Label textAlign="left"
					 paddingLeft="10"
					 width="100%"
					 fontSize="50"
					 color="#1F1F1F"
					 alpha=".6"
					 fontWeight="bold"
					 maxDisplayedLines="1"
					 text="{favouriteFromLabel}"/>

			<s:Label textAlign="right"
					 paddingRight="10"
					 width="100%"
					 fontSize="50"
					 color="#1F1F1F"
					 alpha=".6"
					 fontWeight="bold"
					 maxDisplayedLines="1"
					 text="{favouriteToLabel}"/>

		</s:VGroup>

		<s:VGroup y="150"
				  left="40"
				  right="40"
				  gap="30">

			<favs:FavActionButton id="see"
								  width="100%"
								  icon="normal"
								  click="dispatchEvent(new FavouriteEvent(FavouriteEvent.SCHEDULE_ROUTE));"
								  label="{r('favs.selected.use')}"/>

			<favs:FavActionButton id="infoOnFrom"
								  width="100%"
								  icon="station"
								  click="selectStation(favouriteFrom);"
								  label="{r('favs.selected.seeFrom',favouriteFromLabel)}"/>

			<favs:FavActionButton id="infoOnTo"
								  width="100%"
								  icon="station"
								  click="selectStation(favouriteTo);"
								  label="{r('favs.selected.seeTo',favouriteToLabel)}"/>

			<favs:FavActionButton id="remove"
								  width="100%"
								  icon="delete"
								  click="dispatchEvent(new FavouriteEvent(FavouriteEvent.DELETE));"
								  label="{r('favs.selected.remove')}"/>
		</s:VGroup>
	</s:Group>

</s:Group>
