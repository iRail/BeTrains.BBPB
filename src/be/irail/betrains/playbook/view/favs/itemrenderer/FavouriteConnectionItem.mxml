<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009"
				xmlns:s="library://ns.adobe.com/flex/spark"
				xmlns:mx="library://ns.adobe.com/flex/mx"
				xmlns:components="be.irail.betrains.playbook.view.components.*"
				xmlns:controls="be.irail.betrains.playbook.view.components.controls.*"
				autoDrawBackground="false"
				height="75"
				width="100%"
				mouseChildren="false">
	<s:states>
		<s:State name="normal"/>
		<s:State name="selected"/>
	</s:states>
	<fx:Script>
		<![CDATA[
			import be.irail.betrains.playbook.controller.ModelLocator;
			import be.irail.betrains.playbook.data.FavouriteConnection;

			private var _model:ModelLocator = ModelLocator.getInstance();

			override public function set data(value:Object):void {
				super.data = value;

				if (!value) {
					return;
				}

				if (data is FavouriteConnection) {
					connection = value as FavouriteConnection;
				}
			}

			// ----------------------------
			// connection
			// ----------------------------

			private var _connection:FavouriteConnection;

			[Bindable(event="connectionChange")]
			public function get connection():FavouriteConnection {
				return _connection;
			}

			public function set connection(value:FavouriteConnection):void {
				if (value != _connection) {
					_connection = value;
					dispatchEvent(new Event("connectionChange"));
				}
			}

			// ----------------------------
			// from
			// ----------------------------

			[Bindable(event="connectionChange")]
			public function get from():String {
				if (!_connection)
					return "";
				return _model.stations.getStationById(_connection.fromStationId).formattedName;
			}

			// ----------------------------
			// to
			// ----------------------------

			[Bindable(event="connectionChange")]
			public function get to():String {
				if (!_connection)
					return "";
				return _model.stations.getStationById(_connection.toStationId).formattedName;
			}
		]]>
	</fx:Script>

	<s:Rect left="0"
			right="0"
			top="0"
			bottom="0">
		<s:fill>
			<s:BitmapFill source="@Embed(source='images/cellBg.png')"
						  fillMode="repeat"
						  smooth="true"/>
		</s:fill>
	</s:Rect>

	<s:Rect left="0"
			right="0"
			top="0"
			bottom="0"
			includeIn="selected">
		<s:fill>
			<s:SolidColor color="#ffaa20"
						  alpha=".40"/>
		</s:fill>
	</s:Rect>

	<s:HGroup paddingLeft="10"
			  paddingRight="10"
			  paddingTop="5"
			  paddingBottom="5"
			  width="100%"
			  height="100%"
			  verticalAlign="middle"
			  gap="10">
		<s:Label text="{from}"
				 fontSize="16"
				 color="0"
				 width="100%"
				 height="100%"
				 textAlign="center"
				 fontWeight="bold"
				 verticalAlign="middle"/>
		<s:BitmapImage id="arrowDown"
					   width="10"
					   height="10"
					   horizontalCenter="0"
					   rotation="-90"
					   source="@Embed(source='images/arroworange.png')"
					   smooth="true"/>
		<s:Label text="{to}"
				 fontSize="16"
				 color="0"
				 width="100%"
				 height="100%"
				 textAlign="center"
				 fontWeight="bold"
				 verticalAlign="middle"/>
	</s:HGroup>

	<s:BitmapImage id="favStar"
				   horizontalCenter="0"
				   verticalCenter="-20"
				   source="@Embed(source='images/favstar.png')"
				   height="15"
				   width="15"
				   smooth="true"/>

	<s:Line left="0"
			right="0"
			top="0"
			visible="{this.itemIndex==0}">
		<s:stroke>
			<s:SolidColorStroke color="0"
								alpha=".4"
								weight="1"/>
		</s:stroke>
	</s:Line>
	<s:Line left="0"
			right="0"
			bottom="0">
		<s:stroke>
			<s:SolidColorStroke color="0"
								alpha=".4"
								weight="1"/>
		</s:stroke>
	</s:Line>

</s:ItemRenderer>
