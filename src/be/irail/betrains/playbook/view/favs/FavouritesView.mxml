<?xml version="1.0" encoding="utf-8"?>
<components:MainViewItem xmlns:fx="http://ns.adobe.com/mxml/2009"
						 xmlns:s="library://ns.adobe.com/flex/spark"
						 xmlns:mx="library://ns.adobe.com/flex/mx"
						 xmlns:components="be.irail.betrains.playbook.view.components.*"
						 xmlns:favs="be.irail.betrains.playbook.view.favs.*"
						 creationComplete="mainviewitem1_creationCompleteHandler(event)">
	<fx:Declarations>
		<favs:FavouritesPresentationModel id="presentationModel"/>
	</fx:Declarations>

	<fx:Metadata>
		[Event(name="favouriteChange",type="flash.events.Event")]
	</fx:Metadata>

	<components:states>
		<s:State name="none"/>
		<s:State name="favourites"/>
		<s:State name="favouriteselect"/>
	</components:states>

	<fx:Script>
		<![CDATA[
			import be.irail.betrains.playbook.controller.ModelLocator;
			import be.irail.betrains.playbook.data.FavouriteConnection;
			import be.irail.betrains.playbook.view.favs.itemrenderer.FavouriteConnectionItem;

			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;

			import spark.events.IndexChangeEvent;

			include "../resource_wrapper.as"

			public function get favourites():ArrayCollection {
				return presentationModel.favourites;
			}

			public function set favourites(value:ArrayCollection):void {
				presentationModel.favourites = value;

				if (!value || value.length == 0) {
					this.currentState = "none";
				} else {
					this.currentState = "favourites";
				}
			}

			// ----------------------------
			// selectedFavourite
			// ----------------------------

			private var _selectedFavourite:FavouriteConnection;

			[Bindable(event="selectedFavouriteChange")]
			public function get selectedFavourite():FavouriteConnection {
				return _selectedFavourite;
			}

			public function set selectedFavourite(value:FavouriteConnection):void {
				if (!value) {
					this.currentState = "favourites";
				} else {
					this.currentState = "favouriteselect";
				}
				_selectedFavourite = value;
				dispatchEvent(new Event("selectedFavouriteChange"));
			}

			override public function make():void {
				this.favourites = ModelLocator.getInstance().favourites;
				favDataGroup.selectedItem = null;
			}

			private function favDataGroup_changeHandler(event:IndexChangeEvent):void {
				selectedFavourite = favDataGroup.selectedItem;
			}

			private function favouriteDeleteHandler(e:FavouriteEvent):void {
				e.stopImmediatePropagation();
				presentationModel.deleteFav(selectedFavourite);
				selectedFavourite = null;
			}

			private function favScheduleRouteHandler(e:FavouriteEvent):void {
				e.stopImmediatePropagation();
				dispatchEvent(new Event("favouriteChange"));
			}

			private function mainviewitem1_creationCompleteHandler(event:FlexEvent):void {
				addEventListener(FavouriteEvent.DELETE, favouriteDeleteHandler);
				addEventListener(FavouriteEvent.SCHEDULE_ROUTE, favScheduleRouteHandler);
			}
		]]>
	</fx:Script>

	<s:Label textAlign="center"
			 fontSize="40"
			 color="#1F1F1F"
			 alpha=".3"
			 horizontalCenter="0"
			 verticalCenter="0"
			 fontWeight="bold"
			 includeIn="none"
			 text="{r('favs.none')}"/>


	<s:Group width="100%"
			 height="100%">

		<s:Rect left="410"
				right="0"
				top="0"
				bottom="0"
				alpha=".6"
				includeIn="favouriteselect">
			<s:fill>
				<s:SolidColor color="#FFFFFF"/>
			</s:fill>
		</s:Rect>

		<s:Rect left="0"
				bottom="0"
				top="0"
				width="410"
				excludeFrom="none">
			<s:fill>
				<s:BitmapFill source="@Embed(source='images/bg.png')"
							  fillMode="scale"
							  smooth="true"/>
			</s:fill>
			<s:filters>
				<s:DropShadowFilter blurX="6"
									blurY="6"
									strength=".4"
									quality="3"
									angle="45"
									distance="3"/>
			</s:filters>
		</s:Rect>

		<components:BeTrainsList id="favDataGroup"
								 itemRenderer="be.irail.betrains.playbook.view.favs.itemrenderer.FavouriteConnectionItem"
								 width="410"
								 height="100%"
								 borderVisible="false"
								 change="favDataGroup_changeHandler(event)"
								 dataProvider="{presentationModel.favourites}">
		</components:BeTrainsList>

		<s:Label left="410"
				 width="100%"
				 height="100%"
				 textAlign="center"
				 verticalAlign="middle"
				 fontSize="40"
				 color="#1F1F1F"
				 alpha=".3"
				 fontWeight="bold"
				 includeIn="favourites"
				 text="{r('favs.selected.none')}"/>

		<favs:FavouriteOptions id="options"
							   includeIn="favouriteselect"
							   left="410"
							   width="100%"
							   height="100%"
							   favourite="{selectedFavourite}"/>

	</s:Group>
</components:MainViewItem>
