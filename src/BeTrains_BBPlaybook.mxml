<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009"
					   xmlns:s="library://ns.adobe.com/flex/spark"
					   xmlns:mx="library://ns.adobe.com/flex/mx"
					   frameRate="30"
					   backgroundFrameRate="12"
					   width="1024"
					   height="600"
					   skinClass="be.irail.betrains.playbook.skins.ApplicationSkin"
					   applicationComplete="applicationCompleteHandler()"
					   creationComplete="creationCompleteHandler()"
					   xmlns:components="be.irail.betrains.playbook.components.*">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.resources.ResourceManager;

			import org.springextensions.actionscript.context.support.FlexXMLApplicationContext;

			private var _context:FlexXMLApplicationContext = new FlexXMLApplicationContext();
			private var _supportedLanguagesLocale:Array = ["en_US"];

			protected function creationCompleteHandler():void {
				NativeApplication.nativeApplication.addEventListener(Event.EXITING, onApplicationExiting);

				setupApplicationContext();
				_context.load();
			}

			private function onApplicationExiting(event:Event):void {

			}

			private function setupResourceManager():void {
				// default locale chain (first defined language in _supportedLanguagesLocale)
				ResourceManager.getInstance().localeChain = [_supportedLanguagesLocale[0]];
			}

			private function setupApplicationContext():void {
				//Resource Bundles
				for each (var code:String in _supportedLanguagesLocale) {
					_context.addResourceBundleLocation("/bundles/" + code + "/resources.properties", "resources", code);
				}

				_context.addEventListener(Event.COMPLETE, applicationContext_completeHandler);
				_context.addEventListener(IOErrorEvent.IO_ERROR, appContext_ioErrorHandler);
			}

			private function applicationContext_completeHandler(event:Event):void {
				_context.removeEventListener(Event.COMPLETE, applicationContext_completeHandler);
				_context.removeEventListener(IOErrorEvent.IO_ERROR, appContext_ioErrorHandler);

				setupResourceManager();
			}

			private function appContext_ioErrorHandler(event:IOErrorEvent):void {
				throw event;
			}

			protected function applicationCompleteHandler():void {
				loaderInfo.uncaughtErrorEvents.addEventListener(UncaughtErrorEvent.UNCAUGHT_ERROR, onUncaughtError);
			}

			private function onUncaughtError(event:UncaughtErrorEvent):void {
			}
		]]>
	</fx:Script>
	<components:ApplicationBar id="applicationBar"
							   left="0"
							   right="0"
							   bottom="0"/>
</s:WindowedApplication>
